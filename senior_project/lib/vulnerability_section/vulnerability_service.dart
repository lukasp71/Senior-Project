import 'package:http/http.dart' as http;
import 'dart:convert';

class VulnerabilityService {
  Future<List<dynamic>> fetchVulnerabilities() async {
    try {
      var url = Uri.parse(
          'https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate=2023-11-15T00:00:00.000&pubEndDate=2023-11-25T00:00:00.000');
      var response = await http.get(url);

      if (response.statusCode == 200) {
        var data = json.decode(response.body);
        if (data != null && data.containsKey('vulnerabilities')) {
          List<dynamic> vulnerabilities = data['vulnerabilities'];
          // Sort based on date, assuming 'published' is the date field
          vulnerabilities.sort(
              (a, b) => b['cve']['published'].compareTo(a['cve']['published']));
          // Limit to the most recent 50 entries
          return vulnerabilities.take(50).toList();
        } else {
          throw Exception('Invalid data structure');
        }
      } else {
        throw Exception(
            'Failed to load vulnerabilities: ${response.statusCode}');
      }
    } catch (e) {
      print('Error fetching vulnerabilities: $e');
      return []; // Return an empty list in case of error
    }
  }
}
