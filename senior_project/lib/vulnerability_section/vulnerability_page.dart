import 'package:flutter/material.dart';
import 'package:senior_project/vulnerability_section/vulnerability_service.dart';

class VulnerabilityPage extends StatefulWidget {
  @override
  _VulnerabilityPageState createState() => _VulnerabilityPageState();
}

class _VulnerabilityPageState extends State<VulnerabilityPage> {
  final VulnerabilityService _service = VulnerabilityService();
  late Future<List<dynamic>> _vulnerabilityList;

  @override
  void initState() {
    super.initState();
    _vulnerabilityList = _service.fetchVulnerabilities();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Recent Vulnerabilities'),
      ),
      body: FutureBuilder<List<dynamic>>(
        future: _vulnerabilityList,
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          } else if (snapshot.hasError ||
              snapshot.data == null ||
              snapshot.data!.isEmpty) {
            return Center(
                child: Text('No vulnerabilities found or error occurred'));
          } else {
            return ListView.builder(
              itemCount: snapshot.data!.length,
              itemBuilder: (context, index) {
                var vulnerability = snapshot.data![index];
                return ListTile(
                  title: Text(vulnerability['cve']['id']),
                  subtitle:
                      Text(vulnerability['cve']['descriptions'][0]['value']),
                );
              },
            );
          }
        },
      ),
    );
  }
}
